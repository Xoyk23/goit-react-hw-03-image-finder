{"version":3,"sources":["services/pixabayApi.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/Loader/Loader.jsx","Components/App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImages","q","page","get","then","res","data","hits","propTypes","searchQuery","PropTypes","string","number","SearchBar","state","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","largeImage","src","datalarge","ImageGallery","images","query","onClick","map","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","closeEscape","code","onClose","window","addEventListener","removeEventListener","createPortal","color","largeSrc","LoaderSpinner","height","width","timeout","App","imageArray","loading","showModal","error","updateQuery","scrollTo","top","documentElement","scrollHeight","behavior","fetchImages","options","prevState","length","catch","finally","event","target","attributes","closeModal","prevProps","showLoadMoreButton","Searchbar","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12b8b18f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '19772171-226cd242ef8307a66747d7d05';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nconst getImages = ({ q, page = 1 }) => {\r\n  return axios.get('', { params: { q, page } }).then(res => res.data.hits);\r\n};\r\n\r\ngetImages.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n  page: PropTypes.number,\r\n};\r\n\r\nexport default getImages;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ searchQuery: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, alt, largeImage }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        datalarge={largeImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, query, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" onClick={onClick}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.closeEscape);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.closeEscape);\r\n  }\r\n\r\n  closeEscape = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.props.onClose}>\r\n        <div className=\"Modal\">\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#3f51b5\"\r\n            className=\"ImageGalleryItem-loader\"\r\n          />\r\n          <img\r\n            className=\"Modal-image\"\r\n            src={this.props.largeSrc}\r\n            alt={this.props.alt}\r\n          />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeSrc: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../App.css';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import { Component } from 'react';\r\n\r\nimport './App.css';\r\n\r\n// import axios from 'axios';\r\n\r\nimport getImages from '../services/pixabayApi';\r\n\r\nimport Searchbar from './Searchbar';\r\nimport ImageGallery from './ImageGallery';\r\nimport Button from './Button';\r\nimport Modal from './Modal';\r\n\r\nimport LoaderSpinner from './Loader';\r\nclass App extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    page: 1,\r\n    imageArray: [],\r\n    loading: false,\r\n    showModal: false,\r\n    largeSrc: '',\r\n    error: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n      this.scrollTo();\r\n    }\r\n  }\r\n\r\n  updateQuery = query => {\r\n    this.setState({ searchQuery: query, page: 1, imageArray: [] });\r\n  };\r\n\r\n  scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n    const q = searchQuery;\r\n    const options = { q, page };\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n      loading: true,\r\n    }));\r\n\r\n    getImages(options)\r\n      .then(imageArray => {\r\n        if (imageArray.length > 0) {\r\n          this.setState(prevState => ({\r\n            imageArray: [...prevState.imageArray, ...imageArray],\r\n          }));\r\n        } else {\r\n          this.setState({ error: true });\r\n        }\r\n      })\r\n      .catch(() => this.setState({ error: true }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  showModal = event => {\r\n    const { datalarge } = event.target.attributes;\r\n\r\n    this.setState({\r\n      showModal: true,\r\n      largeSrc: datalarge.value,\r\n    });\r\n  };\r\n\r\n  closeModal = e => {\r\n    if (e.target === e.currentTarget || e.code === 'Escape') {\r\n      this.setState({\r\n        showModal: false,\r\n\r\n        largeSrc: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      searchQuery,\r\n      imageArray,\r\n      loading,\r\n      showModal,\r\n      largeSrc,\r\n      error,\r\n    } = this.state;\r\n\r\n    const showLoadMoreButton = imageArray.length > 0 && !loading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.updateQuery} />\r\n        {error && (\r\n          <h1 className=\"error\">\r\n            Search result '{searchQuery}' not found! ¯\\_(ツ)_/¯\r\n          </h1>\r\n        )}\r\n        {loading && <LoaderSpinner />}\r\n        <ImageGallery\r\n          images={this.state.imageArray}\r\n          query={this.state.searchQuery}\r\n          onClick={this.showModal}\r\n        />\r\n        {showLoadMoreButton && <Button onClick={this.fetchImages} />}\r\n\r\n        {showModal && (\r\n          <Modal\r\n            largeSrc={largeSrc}\r\n            alt={searchQuery}\r\n            onClose={this.closeModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}