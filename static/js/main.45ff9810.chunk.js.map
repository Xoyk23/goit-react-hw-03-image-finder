{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/Loader/Loader.jsx","Components/App.js","index.js"],"names":["SearchBar","state","searchQuery","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","largeImage","src","datalarge","ImageGallery","images","query","onClick","map","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","closeEscape","code","onClose","window","addEventListener","removeEventListener","createPortal","color","largeSrc","LoaderSpinner","height","width","timeout","App","page","imageArray","loading","showModal","updateQuery","scrollTo","top","documentElement","scrollHeight","behavior","fetchImages","axios","defaults","baseURL","get","then","response","prevState","data","hits","catch","error","finally","event","target","attributes","closeModal","prevProps","showLoadMoreButton","length","Searchbar","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45ff9810.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ searchQuery: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, alt, largeImage }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        datalarge={largeImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, query, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" onClick={onClick}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.closeEscape);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.closeEscape);\r\n  }\r\n\r\n  closeEscape = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.props.onClose}>\r\n        <div className=\"Modal\">\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#3f51b5\"\r\n            className=\"ImageGalleryItem-loader\"\r\n          />\r\n          <img\r\n            className=\"Modal-image\"\r\n            src={this.props.largeSrc}\r\n            alt={this.props.alt}\r\n          />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeSrc: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../App.css';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import { Component } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Searchbar from './Searchbar';\r\nimport ImageGallery from './ImageGallery';\r\nimport Button from './Button';\r\nimport Modal from './Modal';\r\n\r\nimport LoaderSpinner from './Loader';\r\nclass App extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    page: 1,\r\n    imageArray: [],\r\n    loading: false,\r\n    showModal: false,\r\n    largeSrc: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n      this.scrollTo();\r\n    }\r\n  }\r\n\r\n  updateQuery = query => {\r\n    this.setState({ searchQuery: query, page: 1, imageArray: [] });\r\n  };\r\n\r\n  scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const API_KEY = '19772171-226cd242ef8307a66747d7d05';\r\n    const { page, searchQuery } = this.state;\r\n    axios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .get(\r\n        `/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          imageArray: [...prevState.imageArray, ...response.data.hits],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  // fetchImages = () => {\r\n  //   this.setState = { loading: true };\r\n\r\n  //   const API_KEY = '19772171-226cd242ef8307a66747d7d05';\r\n  //   const { searchQuery, page } = this.state;\r\n\r\n  //   axios.defaults.baseURL = 'https://pixabay.com/api';\r\n  //   axios\r\n  //     .get(\r\n  //       `/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  //     )\r\n  //     .then(response => {\r\n  //       this.setState({ imageArray: response.data.hits });\r\n  //     });\r\n  // };\r\n\r\n  onClick = () => {};\r\n\r\n  // showModal = e => {\r\n  //   console.log(e.target.attributes);\r\n  //   if (e.target.nodeName !== 'IMG') {\r\n  //     return;\r\n  //   }\r\n\r\n  //   this.setState({\r\n  //     showModal: true,\r\n\r\n  //     largeSrc: e.target.dataset.largeImage,\r\n  //   });\r\n  // };\r\n\r\n  showModal = event => {\r\n    const { datalarge } = event.target.attributes;\r\n\r\n    this.setState({\r\n      showModal: true,\r\n      largeSrc: datalarge.value,\r\n    });\r\n  };\r\n\r\n  closeModal = e => {\r\n    if (e.target === e.currentTarget || e.code === 'Escape') {\r\n      this.setState({\r\n        showModal: false,\r\n\r\n        largeSrc: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      searchQuery,\r\n      imageArray,\r\n      loading,\r\n      showModal,\r\n      largeSrc,\r\n    } = this.state;\r\n\r\n    const showLoadMoreButton = imageArray.length > 0 && !loading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.updateQuery} />\r\n        {loading && <LoaderSpinner />}\r\n        <ImageGallery\r\n          images={this.state.imageArray}\r\n          query={this.state.searchQuery}\r\n          onClick={this.showModal}\r\n        />\r\n        {showLoadMoreButton && <Button onClick={this.fetchImages} />}\r\n\r\n        {showModal && (\r\n          <Modal\r\n            largeSrc={largeSrc}\r\n            alt={searchQuery}\r\n            onClose={this.closeModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}