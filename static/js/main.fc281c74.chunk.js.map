{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/App.js","index.js"],"names":["SearchBar","state","searchQuery","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","query","largeImage","src","alt","ImageGallery","images","map","webformatURL","largeImageURL","id","Button","onClick","LoaderSpinner","color","height","width","timeout","App","page","imageArray","loading","showModal","largeSrc","updateQuery","scrollTo","window","top","document","documentElement","scrollHeight","behavior","fetchImages","axios","defaults","baseURL","get","then","response","prevState","data","hits","catch","error","finally","prevProps","showLoadMoreButton","length","Searchbar","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc281c74.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ searchQuery: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, query, largeImage }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img src={image} alt={query} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, query }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image.webformatURL}\r\n          alt={query}\r\n          largeImage={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../App.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport '../App.css';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import { Component } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { getImages } from '../services/pixabayApi';\r\nimport Searchbar from './Searchbar';\r\nimport ImageGallery from './ImageGallery';\r\nimport Button from './Button';\r\n\r\nimport LoaderSpinner from './Loader';\r\nclass App extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    page: 1,\r\n    imageArray: [],\r\n    loading: false,\r\n    showModal: false,\r\n    largeSrc: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n      this.scrollTo();\r\n    }\r\n  }\r\n\r\n  updateQuery = query => {\r\n    this.setState({ searchQuery: query, page: 1, imageArray: [] });\r\n  };\r\n\r\n  // fetchImages = () => {\r\n  //   this.setState({ loading: true });\r\n  //   const { searchQuery, page } = this.state;\r\n\r\n  //   getImages(searchQuery, page)\r\n  //     .then(images => {\r\n  //       this.setState(prevState => ({\r\n  //         imageArray: [...prevState.imageArray, ...images],\r\n  //       }));\r\n  //     })\r\n  //     .finally(this.setState({ loading: false }));\r\n  // };\r\n\r\n  scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const API_KEY = '19772171-226cd242ef8307a66747d7d05';\r\n    const { page, searchQuery } = this.state;\r\n    axios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .get(\r\n        `/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          imageArray: [...prevState.imageArray, ...response.data.hits],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  // fetchImages = () => {\r\n  //   this.setState = { loading: true };\r\n\r\n  //   const API_KEY = '19772171-226cd242ef8307a66747d7d05';\r\n  //   const { searchQuery, page } = this.state;\r\n\r\n  //   axios.defaults.baseURL = 'https://pixabay.com/api';\r\n  //   axios\r\n  //     .get(\r\n  //       `/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  //     )\r\n  //     .then(response => {\r\n  //       this.setState({ imageArray: response.data.hits });\r\n  //     });\r\n  // };\r\n\r\n  onClick = () => {};\r\n\r\n  render() {\r\n    const {\r\n      searchQuery,\r\n      imageArray,\r\n      loading,\r\n      showModal,\r\n      largeSrc,\r\n    } = this.state;\r\n\r\n    const showLoadMoreButton = imageArray.length > 0 && !loading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.updateQuery} />\r\n        {loading && <LoaderSpinner />}\r\n        <ImageGallery\r\n          images={this.state.imageArray}\r\n          query={this.state.searchQuery}\r\n        />\r\n        {showLoadMoreButton && <Button onClick={this.fetchImages} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// console.log(getImages);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}